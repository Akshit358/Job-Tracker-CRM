{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '/api',\n  withCredentials: true\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  // Don't add auth token for registration and login endpoints\n  const authEndpoints = ['/users/register/', '/auth/login/', '/auth/token/', '/users/verify-email/'];\n  const isAuthEndpoint = authEndpoints.some(endpoint => {\n    var _config$url;\n    return (_config$url = config.url) === null || _config$url === void 0 ? void 0 : _config$url.includes(endpoint);\n  });\n  if (!isAuthEndpoint) {\n    const token = localStorage.getItem('access');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    // Optionally handle global logout or token refresh\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","interceptors","request","use","config","authEndpoints","isAuthEndpoint","some","endpoint","_config$url","url","includes","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","status"],"sources":["/Users/ak/Documents/CodeInJuly2025/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '/api',\n  withCredentials: true,\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(\n  config => {\n    // Don't add auth token for registration and login endpoints\n    const authEndpoints = ['/users/register/', '/auth/login/', '/auth/token/', '/users/verify-email/'];\n    const isAuthEndpoint = authEndpoints.some(endpoint => config.url?.includes(endpoint));\n    \n    if (!isAuthEndpoint) {\n      const token = localStorage.getItem('access');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response && error.response.status === 401) {\n      // Optionally handle global logout or token refresh\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,MAAM;EAChDC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACR;EACA,MAAMC,aAAa,GAAG,CAAC,kBAAkB,EAAE,cAAc,EAAE,cAAc,EAAE,sBAAsB,CAAC;EAClG,MAAMC,cAAc,GAAGD,aAAa,CAACE,IAAI,CAACC,QAAQ;IAAA,IAAAC,WAAA;IAAA,QAAAA,WAAA,GAAIL,MAAM,CAACM,GAAG,cAAAD,WAAA,uBAAVA,WAAA,CAAYE,QAAQ,CAACH,QAAQ,CAAC;EAAA,EAAC;EAErF,IAAI,CAACF,cAAc,EAAE;IACnB,MAAMM,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC5C,IAAIF,KAAK,EAAE;MACTR,MAAM,CAACW,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;IAClD;EACF;EACA,OAAOR,MAAM;AACf,CAAC,EACDa,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDvB,GAAG,CAACO,YAAY,CAACmB,QAAQ,CAACjB,GAAG,CAC3BiB,QAAQ,IAAIA,QAAQ,EACpBH,KAAK,IAAI;EACP,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;EAAA;EAEF,OAAOH,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAevB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}